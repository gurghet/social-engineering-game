name: E2E Setup

on:
  workflow_call:
    inputs:
      platform:
        description: 'Platform to build for'
        required: false
        type: string
        default: 'linux/amd64'
    secrets:
      OPENAI_API_KEY:
        required: true

env:
  DOCKER_BUILDKIT: 1
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  DEBUG_MODE: true
  CI: true
  DOCKER_DEFAULT_PLATFORM: ${{ inputs.platform }}

jobs:
  setup-and-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      if: inputs.platform == 'linux/arm64'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Cache Frontend Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache-frontend
        key: ${{ runner.os }}-buildx-frontend-${{ hashFiles('frontend/**') }}
        restore-keys: |
          ${{ runner.os }}-buildx-frontend-

    - name: Cache Backend Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache-backend
        key: ${{ runner.os }}-buildx-backend-${{ hashFiles('server/**') }}
        restore-keys: |
          ${{ runner.os }}-buildx-backend-

    - name: Build Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        load: true
        tags: social-engineering-game-frontend:test
        cache-from: type=local,src=/tmp/.buildx-cache-frontend
        cache-to: type=local,dest=/tmp/.buildx-cache-frontend-new,mode=max
        build-args: |
          VERSION=test
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

    - name: Move Frontend cache
      run: |
        rm -rf /tmp/.buildx-cache-frontend
        mv /tmp/.buildx-cache-frontend-new /tmp/.buildx-cache-frontend

    - name: Build Backend
      uses: docker/build-push-action@v4
      with:
        context: ./server
        load: true
        tags: social-engineering-game-backend:test
        cache-from: type=local,src=/tmp/.buildx-cache-backend
        cache-to: type=local,dest=/tmp/.buildx-cache-backend-new,mode=max
        build-args: |
          VERSION=test
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

    - name: Move Backend cache
      run: |
        rm -rf /tmp/.buildx-cache-backend
        mv /tmp/.buildx-cache-backend-new /tmp/.buildx-cache-backend

    - name: Enable BuildKit caching
      run: |
        echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
        echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV
        echo "BUILDKIT_PROGRESS=plain" >> $GITHUB_ENV

    - name: Build containers
      env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
        BUILDKIT_PROGRESS: plain
      run: |
        # Build with BuildKit and export cache
        docker compose -f docker-compose.ci.yml build \
          --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --progress=plain

    - name: Start containers
      run: |
        docker compose -f docker-compose.ci.yml up -d

    - name: Make wait-for script executable
      run: chmod +x scripts/wait-for.sh

    - name: Wait for services to be ready
      run: |
        echo "Waiting for containers to start..."
        docker ps
        
        echo "Waiting for frontend..."
        ./scripts/wait-for.sh -t 60 localhost:80:http://health || {
          echo "Frontend failed to become ready. Showing logs:"
          docker compose -f docker-compose.ci.yml logs
          exit 1
        }
        
        echo "Waiting for backend..."
        ./scripts/wait-for.sh -t 60 localhost:8080:http://api/health || {
          echo "Backend failed to become ready. Showing logs:"
          docker compose -f docker-compose.ci.yml logs
          exit 1
        }

    - name: Run Playwright tests
      run: |
        cd e2e
        npm ci
        npx playwright install --with-deps chromium
        PLAYWRIGHT_TEST_BASE_URL=http://localhost npm test

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: e2e/playwright-report/
        retention-days: 30

    - name: Stop containers
      if: always()
      run: docker compose -f docker-compose.ci.yml down --remove-orphans

    - name: Remove images
      if: always()
      run: |
        # Remove local images
        docker image rm -f $(docker images 'social-engineering-game-*' -q) || true
