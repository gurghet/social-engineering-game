name: E2E Setup

on:
  workflow_call:
    secrets:
      OPENAI_API_KEY_JANET:
        required: true
      JANET_SEG_BOT_TOKEN:
        required: true
      JANET_SEG_BOT_CHAT_ID:
        required: true
      token:
        required: true

env:
  DOCKER_BUILDKIT: 1
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_JANET }}
  JANET_SEG_BOT_TOKEN: ${{ secrets.JANET_SEG_BOT_TOKEN }}
  JANET_SEG_BOT_CHAT_ID: ${{ secrets.JANET_SEG_BOT_CHAT_ID }}
  DEBUG_MODE: true
  CI: true
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  setup-and-test:
    timeout-minutes: 60
    runs-on: ubuntu-22.04-arm
    permissions:
      contents: write
      packages: write
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.token }}

      - name: Extract metadata for images
        id: meta
        run: |
          echo "FRONTEND_VERSION=$(cat frontend/version.txt)" >> $GITHUB_ENV
          echo "BACKEND_VERSION=$(cat server/version.txt)" >> $GITHUB_ENV

      - name: Build frontend image locally
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          load: true
          tags: social-engineering-game-frontend:test
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            VERSION=${{ env.FRONTEND_VERSION }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}

      - name: Build backend image locally
        uses: docker/build-push-action@v4
        with:
          context: ./server
          load: true
          tags: social-engineering-game-backend:test
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            VERSION=${{ env.BACKEND_VERSION }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}
            JANET_SEG_BOT_TOKEN=${{ secrets.JANET_SEG_BOT_TOKEN }}
            JANET_SEG_BOT_CHAT_ID=${{ secrets.JANET_SEG_BOT_CHAT_ID }}

      - name: Start containers
        run: docker compose -f docker-compose.ci.yml up -d

      - name: Make wait-for script executable
        run: chmod +x scripts/wait-for.sh

      - name: Wait for services to be ready
        run: |
          echo "Waiting for containers to start..."
          docker ps
          
          echo "Waiting for frontend..."
          ./scripts/wait-for.sh -t 60 localhost:80:http:///health || {
            echo "Frontend failed to become ready. Showing logs:"
            docker compose -f docker-compose.ci.yml logs
            exit 1
          }
          
          echo "Waiting for backend..."
          ./scripts/wait-for.sh -t 60 localhost:80:http:///api/health || {
            echo "Backend failed to become ready. Showing logs:"
            docker compose -f docker-compose.ci.yml logs
            exit 1
          }

      - name: Run Playwright tests
        run: |
          cd e2e
          npm ci
          npx playwright install --with-deps chromium
          PLAYWRIGHT_TEST_BASE_URL=http://localhost npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            e2e/playwright-report/
            e2e/test-results/
          retention-days: 30
          overwrite: true
          include-hidden-files: true

      - name: Push frontend image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.FRONTEND_VERSION }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache
          build-args: |
            VERSION=${{ env.FRONTEND_VERSION }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}

      - name: Push backend image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.BACKEND_VERSION }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
          build-args: |
            VERSION=${{ env.BACKEND_VERSION }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}
            JANET_SEG_BOT_TOKEN=${{ secrets.JANET_SEG_BOT_TOKEN }}
            JANET_SEG_BOT_CHAT_ID=${{ secrets.JANET_SEG_BOT_CHAT_ID }}
