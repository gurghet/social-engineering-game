name: E2E Setup

on:
  workflow_call:
    inputs:
      platform:
        description: "Platform to build for"
        required: false
        type: string
        default: "linux/amd64"
    secrets:
      OPENAI_API_KEY_JANET:
        required: true
      JANET_SEG_BOT_TOKEN:
        required: true
      JANET_SEG_BOT_CHAT_ID:
        required: true

env:
  DOCKER_BUILDKIT: 1
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_JANET }}
  JANET_SEG_BOT_TOKEN: ${{ secrets.JANET_SEG_BOT_TOKEN }}
  JANET_SEG_BOT_CHAT_ID: ${{ secrets.JANET_SEG_BOT_CHAT_ID }}
  DEBUG_MODE: true
  CI: true
  DOCKER_DEFAULT_PLATFORM: ${{ inputs.platform }}

jobs:
  setup-and-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      if: inputs.platform == 'linux/arm64'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Cache Playwright dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
          e2e/node_modules
        key: ${{ runner.os }}-playwright-${{ hashFiles('e2e/package*.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
        retention-days: 7

    - name: Build Frontend with registry cache
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        load: true
        tags: social-engineering-game-frontend:test
        cache-from: |
          type=registry,ref=user/frontend-cache:latest
          type=local,src=/tmp/.buildx-cache-frontend
        cache-to: |
          type=registry,ref=user/frontend-cache:latest,mode=max
          type=local,dest=/tmp/.buildx-cache-frontend,mode=max
        build-args: |
          VERSION=test
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}

    - name: Build Backend with registry cache
      uses: docker/build-push-action@v4
      with:
        context: ./server
        load: true
        tags: social-engineering-game-backend:test
        cache-from: |
          type=registry,ref=user/backend-cache:latest
          type=local,src=/tmp/.buildx-cache-backend
        cache-to: |
          type=registry,ref=user/backend-cache:latest,mode=max
          type=local,dest=/tmp/.buildx-cache-backend,mode=max
        build-args: |
          VERSION=test
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_JANET }}
          JANET_SEG_BOT_TOKEN=${{ secrets.JANET_SEG_BOT_TOKEN }}
          JANET_SEG_BOT_CHAT_ID=${{ secrets.JANET_SEG_BOT_CHAT_ID }}

    - name: Start containers
      run: |
        docker compose -f docker-compose.ci.yml up -d

    - name: Wait for services to be ready
      run: |
        echo "Waiting for containers to start..."
        docker ps

        echo "Waiting for frontend..."
        ./scripts/wait-for.sh -t 60 localhost:80:http:///health || {
          echo "Frontend failed to become ready. Showing logs:"
          docker compose -f docker-compose.ci.yml logs
          exit 1
        }

        echo "Waiting for backend..."
        ./scripts/wait-for.sh -t 60 localhost:8080:http:///api/health || {
          echo "Backend failed to become ready. Showing logs:"
          docker compose -f docker-compose.ci.yml logs
          exit 1
        }

    - name: Run Playwright tests
      run: |
        cd e2e
        npm ci
        npx playwright install --with-deps chromium
        PLAYWRIGHT_TEST_BASE_URL=http://localhost npm test

    - name: Upload Playwright test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: |
          e2e/playwright-report/
          e2e/test-results/
        retention-days: 30

    - name: Stop containers
      if: always()
      run: docker compose -f docker-compose.ci.yml down --remove-orphans

    - name: Cleanup registry caches
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Cleaning up outdated registry caches..."
        docker buildx imagetools inspect user/frontend-cache:latest --format "{{ .Size }}" | awk '{if($1 > 7 * 1024 * 1024 * 1024) system("docker buildx imagetools remove user/frontend-cache:old")}'
        docker buildx imagetools inspect user/backend-cache:latest --format "{{ .Size }}" | awk '{if($1 > 7 * 1024 * 1024 * 1024) system("docker buildx imagetools remove user/backend-cache:old")}'